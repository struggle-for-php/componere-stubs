<?php

namespace Componere\Abstract {

    /**
     * https://www.php.net/class.componere-abstract-definition
     * https://github.com/krakjoe/componere/blob/v3.1.2/src/definition.stub.php
     *
     * @internal
     *
     * @template T of object
     */
    abstract class Definition
    {
        /**
         * @psalm-param class-string $interface
         * @psalm-suppress InvalidReturnType
         */
        public function addInterface(string $interface) : static
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function addMethod(string $name, \Componere\Method $method) : static
        {
        }

        /**
         * @psalm-param trait-string $trait
         * @psalm-suppress InvalidReturnType
         */
        public function addTrait(string $trait) : static
        {
        }

        /**
         * @psalm-return \ReflectionClass<T>
         * @psalm-suppress InvalidReturnType
         */
        public function getReflector() : \ReflectionClass
        {
        }
    }
}

namespace Componere {

    /**
     * https://github.com/krakjoe/componere/blob/v3.1.2/componere.stub.php
     *
     * @template T of object
     * @psalm-param class-string<T> $Type
     * @psalm-return T
     *
     * @psalm-suppress UnusedParam
     * @psalm-suppress InvalidReturnType
     */
    function cast(string $Type, object $object) : object
    {
    }

    /**
     * https://github.com/krakjoe/componere/blob/v3.1.2/componere.stub.php
     *
     * @template T of object
     * @psalm-param class-string<T> $Type
     * @psalm-return T
     *
     * @psalm-suppress UnusedParam
     * @psalm-suppress InvalidReturnType
     */
    function cast_by_ref(string $Type, object $object) : object
    {
    }

    /**
     * https://github.com/krakjoe/componere/blob/v3.1.2/src/definition.stub.php
     *
     * @template T of object
     * @template-extends \Componere\Abstract\Definition<T>
     */
    class Definition extends \Componere\Abstract\Definition
    {
        /**
         * https://www.php.net/componere-definition.construct
         *
         * @psalm-param class-string<T> $name
         *
         * @psalm-suppress MissingParamType
         */
        public function __construct(string $name, ...$arguments)
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function addConstant(string $name, \Componere\Value $value) : static
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function addProperty(string $name, \Componere\Value $value) : static
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function setConstant(string $name, \Componere\Value $value) : static
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function getClosure(string $name) : \Closure
        {
        }

        /**
         * @return \Closure[]
         * @psalm-suppress InvalidReturnType
         */
        public function getClosures() : array
        {
        }

        /**
         * @return void
         */
        public function register() : void
        {
        }

        /**
         * @return bool
         * @psalm-suppress InvalidReturnType
         */
        public function isRegistered() : bool
        {
        }
    }

    /**
     * https://github.com/krakjoe/componere/blob/v3.1.2/src/patch.stub.php
     *
     * @template T of object
     * @template-extends \Componere\Abstract\Definition<T>
     */
    class Patch extends \Componere\Abstract\Definition
    {

        /**
         * @psalm-param T $instance
         *
         * @psalm-suppress MissingParamType
         */
        public function __construct(object $instance, /** @psalm-suppress MissingParamType */...$arguments)
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function getClosure(string $name) : \Closure
        {
        }

        /**
         * @return \Closure[]
         *
         * @psalm-suppress InvalidReturnType
         */
        public function getClosures() : array
        {
        }

        public function apply() : void
        {
        }

        public function revert() : void
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function isApplied() : bool
        {
        }

        public function derive(object $object) : void
        {
        }
    }

    /**
     * https://github.com/krakjoe/componere/blob/v3.1.2/src/method.stub.php
     */
    class Method
    {
        public function __construct(\Closure $closure)
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function setProtected() : Method
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function setPrivate() : Method
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function setStatic() : Method
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function setFinal() : Method
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function getReflector() : \ReflectionMethod
        {
        }
    }

    /**
     * https://github.com/krakjoe/componere/blob/v3.1.2/src/value.stub.php
     */
    class Value
    {

        /**
         * @psalm-param mixed $value
         */
        public function __construct($value = null)
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function setProtected() : Value
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function setPrivate() : Value
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function setStatic() : Value
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function isProtected() : bool
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function isPrivate() : bool
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function isStatic() : bool
        {
        }

        /**
         * @psalm-suppress InvalidReturnType
         */
        public function hasDefault() : bool
        {
        }
    }
}